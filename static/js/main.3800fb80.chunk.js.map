{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPssword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","update","toggleEditing","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","withRouter","refreshUser","setName","history","useHistory","getMyNweets","where","orderBy","get","displayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","render","component","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","StrictMode","getElementById"],"mappings":"uNAkBAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCkCxBC,EAtDE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEF,UAATD,GACCV,EAASW,GAED,aAATD,GACCR,EAAWS,IAIbC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAINX,EAJM,gCAKQZ,EAAYwB,+BAA+BhB,EAAOE,GAL1D,OAKLe,EALK,+CAQQzB,EAAY0B,2BAA2BlB,EAAOE,GARtD,QAQLe,EARK,eAUTE,QAAQC,IAAIH,GAVH,kDAYTV,EAAS,KAAMc,SAZN,0DAAH,sDAqBd,OACI,qCACI,uBAAMR,SAAUA,EAAhB,UACI,uBAAOF,KAAK,QAAQW,KAAK,QAAQC,YAAY,QAAQX,MAAOZ,EAAOQ,SAAUA,EAAUgB,UAAQ,IAC/F,uBAAOb,KAAK,WAAWW,KAAK,WAAWC,YAAY,WAAWX,MAAOV,EAAUM,SAAUA,EAAUgB,UAAQ,IAC3G,uBAAOF,KAAK,SAASV,MAAOR,EAAa,iBAAmB,WAC3DE,KAEL,sBAAMmB,QAZQ,kBAAMpB,GAAc,SAACqB,GAAD,OAAWA,MAY7C,SACKtB,EAAa,UAAY,uBClB3BuB,MA7Bf,WAEI,IAAMC,EAAa,uCAAG,WAAOnB,GAAP,iBAAAK,EAAA,4DAGR,YAFQH,EAAWF,EAArBC,OAAUC,MAGdkB,EAAW,IAAItC,EAAiBE,KAAKqC,mBACrB,WAATnB,IACPkB,EAAW,IAAItC,EAAiBE,KAAKsC,oBANvB,SAQZvC,EAAYwC,gBAAgBH,GARhB,2CAAH,sDAUrB,OACE,gCACI,cAAC,EAAD,IAEA,gCACI,wBAAQJ,QAASG,EAAejB,KAAK,SAArC,kCAGA,wBAAQc,QAASG,EAAejB,KAAK,SAArC,yC,QCyCGsB,EA7DD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACtB,EAA8BpC,oBAAS,GAAvC,mBAAOqC,EAAP,KAAgBC,EAAhB,KACA,EAAgCtC,mBAASmC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAA3B,EAAA,0DACP4B,OAAOC,QAAQ,wBADR,gCAIRjD,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMC,SAJ/B,UAMgB,KAA3BZ,EAASa,cANE,gCAOJnD,EAAeoD,WAAWd,EAASa,eAAeD,SAP9C,2CAAH,qDAiBbjC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAGPrB,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMI,OAAO,CAACX,KAAMC,IAH9C,OAIbW,IAJa,2CAAH,sDAORA,EAAgB,kBAAMb,GAAY,SAACX,GAAD,OAAWA,MAEnD,OACI,8BACKU,EACG,qCACA,uBAAMvB,SAAUA,EAAhB,UACI,uBAAOD,MAAO2B,EAAU/B,SAnBvB,SAACC,GACd,IAAiBG,EAAUH,EAApBC,OAAUE,MACjB4B,EAAY5B,IAiB4CY,UAAQ,IACpD,uBAAOF,KAAK,SAASV,MAAM,cAE/B,wBAAQa,QAASyB,EAAjB,uBAGA,gCACA,6BAAKhB,EAASI,OAEVJ,EAASa,eACL,qBAAKI,IAAKjB,EAASa,cAAeK,MAAM,OAAOC,OAAO,OAAOC,IAAI,UAIrEnB,GACI,qCACA,wBAAQV,QAASgB,EAAjB,oBACA,wBAAQhB,QAASyB,EAAjB,2B,QCkBTK,EArEM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,EAA0BzD,mBAAS,IAAnC,mBAAO0D,EAAP,KAAcC,EAAd,KACA,EAAoC3D,mBAAS,IAA7C,mBAAO4D,EAAP,KAAmBC,EAAnB,KAEM/C,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACbL,EAAMM,iBAEFgC,EAAgB,GACF,KAAfY,EAJU,wBAKHE,EAAiBjE,EACtBkE,MACAC,MAFsB,UAEbP,EAAQQ,IAFK,YAEEC,gBAPhB,SAQcJ,EAAcK,UAAUP,EAAY,YARlD,cAQHQ,EARG,gBASaA,EAASL,IAAIM,iBAT1B,OASTrB,EATS,gCAYPrD,EAAU2E,WAAW,UAAUC,IAAI,CACrChC,KAAKmB,EACLc,UAAWC,KAAKC,MAChBC,UAAWlB,EAAQQ,IACnBjB,kBAhBS,QAkBbW,EAAS,IACTE,EAAc,IAnBD,4CAAH,sDA2Cd,OACI,uBAAM/C,SAAUA,EAAhB,UACI,uBACAD,MAAO6C,EACPjD,SAxBS,SAACC,GAClBA,EAAMM,iBACN,IAAkBH,EAAYH,EAAtBC,OAAUE,MAClB8C,EAAS9C,IAsBDU,KAAK,OACLC,YAAY,sBACZoD,UAAW,MAEX,uBAAOrD,KAAK,OAAOsD,OAAO,UAAWpE,SArBxB,SAACC,GACtB,IACMoE,EADuBpE,EAArBC,OAASoE,MACK,GACtB3D,QAAQC,IAAIyD,GACZ,IAAME,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IAAyBC,EAAcD,EAA/BE,cAAiBD,OACzBvB,EAAcuB,IAElBJ,EAAOM,cAAcR,MAab,uBAAOvD,KAAK,SAASV,MAAM,UACzB+C,GACF,gCACI,qBAAKL,IAAI,MAAMH,IAAKQ,EAAYP,MAAM,OAAOC,OAAO,SACpD,wBAAQ5B,QA5BM,WAAOmC,EAAc,KA4BnC,0BC/BD0B,MA9Bf,YAA0B,IAAX9B,EAAU,EAAVA,QACb,EAA4BzD,mBAAS,IAArC,mBAAOwF,EAAP,KAAeC,EAAf,KAaA,OAXEC,qBAAW,WACT/F,EAAU2E,WAAW,UAAUqB,YAAW,SAACC,GACzC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACjClD,GAAIkD,EAASlD,IACVkD,EAAS9E,WAEduE,EAAUI,QAEX,IAIH,qCACA,cAAC,EAAD,CAAcpC,QAASA,IAEvB,8BAEE+B,EAAOO,KAAI,SAACrC,GAAD,OACT,cAAC,EAAD,CAAsBvB,SAAUuB,EAChCtB,QAASsB,EAAMiB,YAAclB,EAAQQ,KADzBP,EAAMZ,aCwCXmD,eA3DC,SAAC,GAA4B,IAA3BxC,EAA0B,EAA1BA,QAASyC,EAAiB,EAAjBA,YACvB,EAA4BlG,mBAAS,IAArC,mBAAOwF,EAAP,KAAeC,EAAf,KACA,EAAwBzF,mBAAS,IAAjC,mBAAOY,EAAP,KAAauF,EAAb,KAEMC,EAAUC,cAOVC,EAAW,uCAAG,4BAAAvF,EAAA,sEACKpB,EAAU2E,WAAW,UACzCiC,MAAM,YAAa,KAAM9C,EAAQQ,KACjCuC,QAAQ,YAAa,OACrBC,MAJe,OACVjB,EADU,OAMhBC,EAAUD,EAAOM,KAAKC,KAAI,SAAClD,GAAD,OAAQA,EAAI3B,WANtB,2CAAH,qDAcXJ,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBAEM,KAATJ,GAAe6C,EAAQiD,cAAgB9F,EAH7B,gCAIH6C,EAAQkD,cAAc,CACxBD,YAAa9F,IALR,OAOTsF,IAPS,2CAAH,sDAed,OAJAR,qBAAU,WACNY,OAIA,qCACI,uBAAMxF,SAAUA,EAAhB,UACI,uBAAOS,KAAK,OAAOV,MAAOD,EAAMY,YAAY,oBAAoBf,SAvB3D,SAACC,GACd,IAAgBG,EAAYH,EAArBC,OAASE,MAChBsF,EAAQtF,MAsBA,uBAAOU,KAAK,SAASV,MAAM,gCAE/B,wBAAQa,QAxCM,WAClBjC,EAAYmH,UACZR,EAAQS,KAAK,MAsCT,qBAEA,8BACKrB,EAAOO,KAAI,SAACrC,GAAD,OACR,cAAC,EAAD,CAAsBvB,SAAUuB,EAChCtB,QAASsB,EAAMiB,YAAclB,EAAQQ,KADzBP,EAAMZ,eCxCvBgE,EAfI,SAAC,GAAe,IAAdrD,EAAa,EAAbA,QACjB,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMsD,GAAG,IAAT,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBtD,EAAQiD,YAA7B,4BCkBLM,EArBG,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAYxD,EAA0B,EAA1BA,QAASyC,EAAiB,EAAjBA,YACrC,OACI,eAAC,IAAD,WACKe,GAAc,cAAC,EAAD,CAAYxD,QAASA,IACpC,cAAC,IAAD,UAEKwD,EACG,qCACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAClBC,OAAQ,kBAAK,cAAC,EAAD,CAAM3D,QAASA,OAC5B,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,WAClBC,OAAQ,kBAAK,cAAC,EAAD,CAAS3D,QAASA,EAASyC,YAAaA,UAGrD,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAIE,UAAWzF,UCoBtC0F,MArCf,WACE,MAAwBtH,oBAAS,GAAjC,mBAAOuH,EAAP,KAAaC,EAAb,KACA,EAA8BxH,mBAAS,MAAvC,mBAAOyD,EAAP,KAAgBgE,EAAhB,KA4BA,OAfA/B,qBAAU,WACRjG,EAAYiI,oBAAmB,SAACC,GAE5BF,IADCE,GACU,CACT1D,IAAK0D,EAAK1D,IACVyC,YAAaiB,EAAKjB,YAClBC,cAAe,SAACiB,GAAD,OAAUD,EAAKhB,cAAciB,MAKhDJ,GAAQ,QAEV,IAGA,mCACID,EAAO,cAAC,EAAD,CAAWN,WAAYY,QAAQpE,GAAUA,QAASA,EAASyC,YA5BpD,WAClB,IAAMyB,EAAOlI,EAAYqI,YACzBL,EAAW,CACTxD,IAAK0D,EAAK1D,IACVyC,YAAaiB,EAAKjB,YAClBC,cAAe,SAACiB,GAAD,OAAUD,EAAKhB,cAAciB,MAG9CxG,QAAQC,IAAIsG,MAoByF,qBChCzGI,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,W","file":"static/js/main.3800fb80.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPssword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }\r\n        if(name === \"password\"){\r\n            setPssword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" value={email} onChange={onChange} required/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChange} required/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nfunction Auth() {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const { target : {name}, } = event;\r\n        let provider;\r\n        if(name===\"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if( name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n  return (\r\n    <div>\r\n        <AuthForm />\r\n\r\n        <div>\r\n            <button onClick={onSocialClick} name=\"google\">\r\n                Continue with Google\r\n                </button>\r\n            <button onClick={onSocialClick} name=\"github\">\r\n                Continue with Github\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () =>{\r\n        const ok = window.confirm(\"삭제 ㄱ?\");\r\n        \r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n            if(nweetObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChange = (event) =>{\r\n        const {target : {value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\r\n        toggleEditing();\r\n    }\r\n\r\n    const toggleEditing = () => setEditing( (prev) => !prev);\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit}>\r\n                    <input value={newNweet} onChange={onChange} required />\r\n                    <input type=\"submit\" value=\"update\" />\r\n                </form>\r\n                <button onClick={toggleEditing}>cancel</button>\r\n                </>\r\n            ) :\r\n                <div>\r\n                <h4>{nweetObj.text}</h4>\r\n                {\r\n                    nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"nweet\" /> \r\n                    )\r\n                }\r\n                {\r\n                    isOwner && (\r\n                        <>\r\n                        <button onClick={onDeleteClick}>Delete</button>\r\n                        <button onClick={toggleEditing}>Edit</button>\r\n                        </>\r\n                    )\r\n                }\r\n                </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    \r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef =  storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        await dbService.collection(\"nweets\").add({\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");  \r\n\r\n    }\r\n\r\n    const onChange = (event) => {\r\n    event.preventDefault();\r\n    const { target : {value },} = event;\r\n    setNweet(value);\r\n    }\r\n\r\n    const onClearAttachment = () => {setAttachment(\"\")}\r\n    \r\n    const onFileChange = (event) => {\r\n    const { target: {files}, } = event;\r\n    const theFile = files[0];\r\n    console.log(theFile);\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n        const { currentTarget : {result }, } = finishedEvent;\r\n        setAttachment(result);\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"what's on your mind\"\r\n            maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\"  onChange={onFileChange}  />\r\n            <input type=\"submit\" value=\"nweet\" />\r\n            { attachment && \r\n            <div>\r\n                <img alt=\"qwe\" src={attachment} width=\"50px\" height=\"50px\" />\r\n                <button onClick={onClearAttachment}>Clear</button>\r\n            </div>\r\n            }\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Home({userObj}) {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect( () =>{\r\n      dbService.collection(\"nweets\").onSnapshot((snapshot) =>{\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          id: document.id,\r\n          ...document.data(),\r\n        }));\r\n        setNweets(newArray);\r\n      })\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n    <NweetFactory userObj={userObj}  />\r\n\r\n    <div> \r\n      {  \r\n      nweets.map((nweet) => (\r\n        <Nweet key={nweet.id} nweetObj={nweet}\r\n        isOwner={nweet.creatorId === userObj.uid} />\r\n      )\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Nweet from \"components/Nweet\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\n//import { useHistory } from \"react-router\";\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n    \r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService.collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\", \"asc\")\r\n        .get();\r\n\r\n        setNweets(nweets.docs.map((doc)=> doc.data()));\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}, } = event;\r\n        setName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if(name !== \"\" && userObj.displayName !== name){\r\n            await userObj.updateProfile({\r\n                displayName: name\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getMyNweets();\r\n    }, );\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" value={name} placeholder=\"what's your name?\" onChange={onChange} />\r\n                <input type=\"submit\" value=\"이름변경\"  />\r\n            </form>\r\n            <button onClick={onLogoutClick}>Log Out</button>\r\n            \r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid} />\r\n                )\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile);","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {/* <Route exact path=\"/\" component={Home}/> */}\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\" \r\n                    render={()=> <Home userObj={userObj} /> }/>\r\n                    <Route exact path=\"/profile\" \r\n                    render={()=> <Profile userObj={userObj} refreshUser={refreshUser} />}/>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\" component={Auth}/>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user=  authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n\n    console.log(user);\n  }\n\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else{\n        setUserObj(false);\n      }\n      setInit(true);\n    })\n  },[])\n\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"initializing...\" }\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}