{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPssword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","update","toggleEditing","autoFocus","src","width","height","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","_nweet","_attachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","undefined","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","marginTop","withRouter","refreshUser","setName","getMyNweets","useHistory","where","get","displayName","updateProfile","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","render","component","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6c8c7c3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPssword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }\r\n        if(name === \"password\"){\r\n            setPssword(value);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n        \r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" value={email} onChange={onChange} required className=\"authInput\"/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={onChange} required className=\"authInput\"/>\r\n                <input type=\"submit\" className=\"authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub, faGit} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nfunction Auth() {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const { target : {name}, } = event;\r\n        let provider;\r\n        if(name===\"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if( name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    }\r\n  return (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon \r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{marginBottom: 30}} />\r\n\r\n        <AuthForm />\r\n\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () =>{\r\n        const ok = window.confirm(\"삭제 ㄱ?\");\r\n        \r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n            if(nweetObj.attachmentUrl !== \"\") {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChange = (event) =>{\r\n        const {target : {value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\r\n        toggleEditing();\r\n    }\r\n\r\n    const toggleEditing = () => setEditing( (prev) => !prev);\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input value={newNweet} onChange={onChange} required\r\n                    placeholder=\"Edit your nweet\" autoFocus className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"update\" className=\"formBtn\" />\r\n                </form>\r\n                <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </button>\r\n                </>\r\n            ) :\r\n                <div>\r\n                <h4>{nweetObj.text}</h4>\r\n                {\r\n                    nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"nweet\" /> \r\n                    )\r\n                }\r\n                {\r\n                    isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n    \r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\") {\r\n            return;\r\n        }\r\n        const _nweet = nweet;\r\n        const _attachment = attachment;\r\n        setNweet(\"\");\r\n        setAttachment(\"\");  \r\n\r\n        let attachmentUrl = \"\";\r\n        if(_attachment !== \"\"){\r\n            const attachmentRef =  storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(_attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        await dbService.collection(\"nweets\").add({\r\n            text:_nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        \r\n\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const { target : {value },} = event;\r\n            setNweet(value);\r\n    }\r\n\r\n    const onClearAttachment = () => {setAttachment(\"\")}\r\n    \r\n    const onFileChange = (event) => {\r\n        const { target: {files}, } = event;\r\n        const theFile = files[0];\r\n        //console.log(theFile);\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget : {result }, } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n\r\n        if(theFile !== undefined)\r\n            reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input \r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"what's on your mind\"\r\n                    maxLength={120}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attatch-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n\r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\"  onChange={onFileChange} style={{opacity:0}} />\r\n            { attachment && \r\n            (<div className=\"factoryForm__attachment\">\r\n                <img src={attachment} style={{backgroundImage: attachment,}} alt=\"attachment\" />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n            )}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Home({userObj}) {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect( () =>{\r\n      dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) =>{\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          id: document.id,\r\n          ...document.data(),\r\n        }));\r\n        setNweets(newArray);\r\n      })\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <NweetFactory userObj={userObj}  />\r\n\r\n    <div style={{ marginTop:30}}> \r\n      {  \r\n      nweets.map((nweet) => (\r\n        <Nweet key={nweet.id} nweetObj={nweet}\r\n        isOwner={nweet.creatorId === userObj.uid} />\r\n      )\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Nweet from \"components/Nweet\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\n//import { useHistory } from \"react-router\";\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n    \r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService.collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\", \"asc\")\r\n        .get();\r\n\r\n        setNweets(nweets.docs.map((doc)=> doc.data()));\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value}, } = event;\r\n        setName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if(name !== \"\" && userObj.displayName !== name){\r\n            await userObj.updateProfile({\r\n                displayName: name\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getMyNweets();\r\n    }, );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" value={name} placeholder=\"what's your name?\" \r\n                onChange={onChange} autoFocus className=\"formInput\" />\r\n                <input type=\"submit\" value=\"이름변경\" className=\"formBtn\" \r\n                style={{marginTop: 10,}} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick=\"onLogoutClick\">\r\n                Log Out\r\n            </span>\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid} />\r\n                )\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile);","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style={{marginRight: 10}}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{marginTop: 10}}>\r\n                            {userObj.displayName ?\r\n                            `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <div \r\n                    style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\"\r\n                    }}>\r\n                        <Route exact path=\"/\" \r\n                        render={()=> <Home userObj={userObj} /> }/>\r\n                        <Route exact path=\"/profile\" \r\n                        render={()=> <Profile userObj={userObj} refreshUser={refreshUser} />}/>\r\n                    </div>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\" component={Auth}/>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user=  authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n\n    console.log(user);\n  }\n\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      } else{\n        setUserObj(false);\n      }\n      setInit(true);\n    })\n  },[])\n\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"initializing...\" }\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}